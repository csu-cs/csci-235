import{_ as d,D as l,o as r,c as h,k as s,a,I as i,w as e,R as t}from"./chunks/framework.FOt1pWjv.js";const k="/csci-235/assets/array-of-strings.gsouIg_i.svg",P=JSON.parse('{"title":"Arrays as Strings","description":"","frontmatter":{},"headers":[],"relativePath":"notes/08-arrays-strings.md","filePath":"notes/08-arrays-strings.md","lastUpdated":1672369588000}'),g={name:"notes/08-arrays-strings.md"},u=t("",11),m=s("div",{class:"youtube"},[s("div",null,[s("iframe",{width:"853",height:"480",src:"https://www.youtube-nocookie.com/embed/510w-d3NVUk?showinfo=0&rel=0",frameborder:"0",allowfullscreen:"allowfullscreen"})])],-1),E=t("",4),y=s("li",null,[s("code",{class:"cpp"},"strcpy(char a[], char b[])"),a(" – copies a c-string (an unsafe operation, because the source array may not fit in the destination array and overflow into other memory locations)")],-1),b=s("li",null,[s("code",{class:"cpp"},"strncpy(char a[], char b[], int num)"),a(" – safely copies a c-string with up to num chars")],-1),_=s("code",{class:"cpp"},"strcmp(char a[], char b[])",-1),f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},T={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.185ex",height:"1.661ex",role:"img",focusable:"false",viewBox:"0 -694 2291.6 734","aria-hidden":"true"},Q=t("",1),F=[Q],C={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.185ex",height:"1.661ex",role:"img",focusable:"false",viewBox:"0 -694 2291.6 734","aria-hidden":"true"},v=t("",1),A=[v],x=s("li",null,[s("code",{class:"cpp"},"strlen(char a[])"),a(" – returns a c-string's length (the number of characters before "),s("code",null,"'\\0'"),a(")")],-1),q=t("",15);function B(S,D,M,V,L,N){const n=l("mi"),o=l("mo"),p=l("math"),c=l("mjx-assistive-mml");return r(),h("div",null,[u,m,E,s("ul",null,[y,b,s("li",null,[_,a(" – compares c-strings, character by character. Returns 0 if the parameters are equal, < 0 if "),s("mjx-container",f,[(r(),h("svg",T,F)),i(c,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:e(()=>[i(p,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:e(()=>[i(n,null,{default:e(()=>[a("a")]),_:1}),i(o,null,{default:e(()=>[a("<")]),_:1}),i(n,null,{default:e(()=>[a("b")]),_:1})]),_:1})]),_:1})]),a(" and > 0 if "),s("mjx-container",C,[(r(),h("svg",w,A)),i(c,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:e(()=>[i(p,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:e(()=>[i(n,null,{default:e(()=>[a("a")]),_:1}),i(o,null,{default:e(()=>[a(">")]),_:1}),i(n,null,{default:e(()=>[a("b")]),_:1})]),_:1})]),_:1})]),a(".")]),x]),q])}const H=d(g,[["render",B]]);export{P as __pageData,H as default};
