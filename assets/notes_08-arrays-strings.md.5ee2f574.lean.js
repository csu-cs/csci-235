import{_ as u,C as t,o as p,c as r,k as s,a,H as n,w as e,Q as o}from"./chunks/framework.eb542efc.js";const h="/csci-235/assets/array-of-strings.2d1cfc6a.svg",I=JSON.parse('{"title":"Arrays as Strings","description":"","frontmatter":{},"headers":[],"relativePath":"notes/08-arrays-strings.md","filePath":"notes/08-arrays-strings.md","lastUpdated":1672369588000}'),y={name:"notes/08-arrays-strings.md"},m=o("",11),E=s("div",{class:"youtube"},[s("div",null,[s("iframe",{width:"853",height:"480",src:"https://www.youtube-nocookie.com/embed/510w-d3NVUk?showinfo=0&rel=0",frameborder:"0",allowfullscreen:"allowfullscreen"})])],-1),g=o("",4),b=s("li",null,[s("code",{class:"cpp"},"strcpy(char a[], char b[])"),a(" – copies a c-string (an unsafe operation, because the source array may not fit in the destination array and overflow into other memory locations)")],-1),_=s("li",null,[s("code",{class:"cpp"},"strncpy(char a[], char b[], int num)"),a(" – safely copies a c-string with up to num chars")],-1),f=s("code",{class:"cpp"},"strcmp(char a[], char b[])",-1),T={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.185ex",height:"1.661ex",role:"img",focusable:"false",viewBox:"0 -694 2291.6 734","aria-hidden":"true"},F=o("",1),C=[F],v={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.185ex",height:"1.661ex",role:"img",focusable:"false",viewBox:"0 -694 2291.6 734","aria-hidden":"true"},q=o("",1),A=[q],k=s("li",null,[s("code",{class:"cpp"},"strlen(char a[])"),a(" – returns a c-string's length (the number of characters before "),s("code",null,"'\\0'"),a(")")],-1),x=o("",15);function B(S,D,M,L,V,N){const l=t("mi"),c=t("mo"),i=t("math"),d=t("mjx-assistive-mml");return p(),r("div",null,[m,E,g,s("ul",null,[b,_,s("li",null,[f,a(" – compares c-strings, character by character. Returns 0 if the parameters are equal, < 0 if "),s("mjx-container",T,[(p(),r("svg",Q,C)),n(d,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:e(()=>[n(i,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:e(()=>[n(l,null,{default:e(()=>[a("a")]),_:1}),n(c,null,{default:e(()=>[a("<")]),_:1}),n(l,null,{default:e(()=>[a("b")]),_:1})]),_:1})]),_:1})]),a(" and > 0 if "),s("mjx-container",v,[(p(),r("svg",w,A)),n(d,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:e(()=>[n(i,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:e(()=>[n(l,null,{default:e(()=>[a("a")]),_:1}),n(c,null,{default:e(()=>[a(">")]),_:1}),n(l,null,{default:e(()=>[a("b")]),_:1})]),_:1})]),_:1})]),a(".")]),k]),x])}const P=u(y,[["render",B]]);export{I as __pageData,P as default};
