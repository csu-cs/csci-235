import{_ as e,o as n,c as l,b as a,d as s}from"./app.833eda2c.js";const b=JSON.parse('{"title":"File Input and Output","description":"","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]},{"level":2,"title":"Common Errors","slug":"common-errors","link":"#common-errors","children":[]},{"level":2,"title":"Self-Check Questions","slug":"self-check-questions","link":"#self-check-questions","children":[]}],"relativePath":"notes/03-files.md","lastUpdated":1671816034000}'),t={name:"notes/03-files.md"},o=a('<h1 id="file-input-and-output" tabindex="-1">File Input and Output <a class="header-anchor" href="#file-input-and-output" aria-hidden="true">#</a></h1><p><em>Chapter 3</em></p><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>A <em>file</em> is an area in secondary storage to hold info.</p><p>We use streams that are similar to <code>cin</code> and count with files, except they are <code>fstream</code> variables that we define.</p><p>File I/O is a five-step process:</p><ol><li>Include the <code>fstream</code> header.</li><li>Declare file stream variables (of time <code>ifstream</code> for input and <code>ofstream</code> for output).</li><li>Associate the file stream variables with the input/output sources.</li><li>Use the file stream variables with <code>&gt;&gt;</code>, <code>&lt;&lt;</code>, or other input/output functions.</li><li>Close the file stream (don’t forget this step).</li></ol>',7),p=s("div",{style:{"max-width":"853px",margin:"0 auto",padding:"0"}},[s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{width:"560",height:"315",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},src:"https://www.youtube.com/embed/MMp4zV05R5k?rel=0&showinfo=0",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:"allowfullscreen"})])],-1),i=s("div",{style:{"max-width":"853px",margin:"1em auto 0 auto",padding:"0"}},[s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{width:"560",height:"315",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},src:"https://www.youtube.com/embed/QnCVoYnLIg8?rel=0&showinfo=0",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:"allowfullscreen"})])],-1),r=a(`<h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">fstream</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// the preprocessor directive for using files</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Declare variables</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Declare that you will use a file stream.</span></span>
<span class="line"><span style="color:#A6ACCD;">    ifstream inData</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // input file stream</span></span>
<span class="line"><span style="color:#A6ACCD;">    ofstream outData</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // output file stream</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Read in values</span></span>
<span class="line"><span style="color:#A6ACCD;">    inData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // opens data for reading</span></span>
<span class="line"><span style="color:#A6ACCD;">    inData </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> firstName </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> lastName </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> GPA</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // gets the data out of text.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">    inData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Write values to new file</span></span>
<span class="line"><span style="color:#A6ACCD;">    outData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">out.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // creates a new file for output</span></span>
<span class="line"><span style="color:#A6ACCD;">    outData </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> finalGrade</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // put the data into out.txt</span></span>
<span class="line"><span style="color:#A6ACCD;">    outData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="common-errors" tabindex="-1">Common Errors <a class="header-anchor" href="#common-errors" aria-hidden="true">#</a></h2><ul><li>Forgot to open your file. It will still compile and run, but give you erroneous results.</li><li>Tried to read input from a file that does not exist. Make sure the file is in the correct directly and that your code didn’t misspell the name.</li><li>If you specify a directly location in conjunction with your filename (e.g., <code>&quot;C:\\\\my stuff\\\\data.txt&quot;</code>), use forward slashes or escape your backslashes (e.g., <code>&quot;c:/my stuff/data.txt&quot;</code> or <code>&quot;c:\\\\my stuff\\\\data.txt&quot;</code>).</li><li>Avoid using absolute paths (paths that reverence the file location from the root of the drive rather than path relative to the program’s location.</li></ul><h2 id="self-check-questions" tabindex="-1">Self-Check Questions <a class="header-anchor" href="#self-check-questions" aria-hidden="true">#</a></h2><ol><li>Name the five steps for reading from a file.</li><li>Name the five steps for writing to a file.</li><li>If you are opening a file and it is not there, what happens?</li><li>If you are writing to a file that doesn’t exist yet, what happens?</li></ol>`,6),c=[o,p,i,r];function d(u,y,h,f,m,D){return n(),l("div",null,c)}const C=e(t,[["render",d]]);export{b as __pageData,C as default};
