import{_ as a,o as l,c as e,a as s,b as p,e as n}from"./app.d5c7b695.js";const g=JSON.parse('{"title":"Enumeration Types","description":"","frontmatter":{},"headers":[{"level":2,"title":"Examples","slug":"examples","link":"#examples","children":[]},{"level":2,"title":"Common Mistakes","slug":"common-mistakes","link":"#common-mistakes","children":[]},{"level":2,"title":"Declaring variables and assigning values with your new type!","slug":"declaring-variables-and-assigning-values-with-your-new-type","link":"#declaring-variables-and-assigning-values-with-your-new-type","children":[]},{"level":2,"title":"Operations on Enumeration Types","slug":"operations-on-enumeration-types","link":"#operations-on-enumeration-types","children":[]},{"level":2,"title":"Input and Output of Enumeration Types","slug":"input-and-output-of-enumeration-types","link":"#input-and-output-of-enumeration-types","children":[]}],"relativePath":"notes/07-enums.md","lastUpdated":1672203699000}'),o={name:"notes/07-enums.md"},t=s("h1",{id:"enumeration-types",tabindex:"-1"},[p("Enumeration Types "),s("a",{class:"header-anchor",href:"#enumeration-types","aria-hidden":"true"},"#")],-1),r=s("p",null,[s("em",null,"Chapter 7")],-1),c=s("p",null,"Often times in our code, we need to have a list of things that aren't directly representable using numbers (e.g., sports, types of cars, colors, days of the week, etc.). You can create your own types to hold any value you put into a list. An enumeration is defined as a list of things. C++ has the keyword enum, which is short for enumeration.",-1),i=s("div",{class:"youtube"},[s("div",null,[s("iframe",{width:"853",height:"480",src:"https://www.youtube-nocookie.com/embed/aq7Noc9BQL0?rel=0&showinfo=0",frameborder:"0",allowfullscreen:"allowfullscreen"})])],-1),y=n(`<ul><li><p>Data type: a set of values with a set of operations on them</p></li><li><p>Enumeration type: a simple data type created by the programmer</p></li><li><p>To define an enumeration type, you need:</p><ul><li><p>A name for the data type</p></li><li><p>A set of values for the data type</p></li><li><p>A set of operations on the values</p></li></ul></li><li><p>You can specify the name and the values, but not the operations</p></li><li><p>Syntax:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">TypeName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VALUE_1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VALUE_2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VALUE_3</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> … </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>VALUE_1</code>, <code>VALUE_2</code>, … are identifiers called <em>enumerators</em>.</li></ul></li><li><p>The list specifies the ordering:</p><ul><li><p><code>VALUE_1 &lt; VALUE_2 &lt; VALUE_3 &lt; …</code></p></li><li><p>The enumeration type is an ordered set of values</p></li><li><p>The default value assigned to enumerators starts at 0</p></li></ul></li><li><p>A value used in one enumeration type cannot be used by another in the same scope.</p></li><li><p>The same rules apply to enumeration types declared outside of any blocks.</p></li></ul><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h2><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Colors</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BROWN</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BLUE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">RED</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">GREEN</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">YELLOW</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>defines a new data type called <code>Color</code>, and the values belonging to this data type are <code>BROWN</code>, <code>BLUE</code>, <code>RED</code>, <code>GREEN</code>, and <code>YELLOW</code>.</li></ul><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Standing</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">FRESHMAN</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SOPHMORE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">JUNIOR</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SENIOR</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>defines Standing to be an enumeration type. The values belonging to standing are <code>FRESHMAN</code>, <code>SOPHMORE</code>, <code>JUNIOR</code>, and <code>SENIOR</code>.</li></ul><h2 id="common-mistakes" tabindex="-1">Common Mistakes <a class="header-anchor" href="#common-mistakes" aria-hidden="true">#</a></h2><p>Types and their values must be valid identifiers (i.e., they must follow the same rules as variable names).</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Grade</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> &#39;A&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> &#39;B&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> &#39;C&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> &#39;D&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> &#39;F&#39; </span><span style="color:#89DDFF;">};</span><span style="color:#676E95;font-style:italic;"> // illegal enumeration type</span></span>
<span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Place</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> 1ST</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> 2ND</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> 3RD</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> 4TH</span><span style="color:#89DDFF;">};</span><span style="color:#676E95;font-style:italic;"> // illegal enumeration type</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// cannot define value, APPLE in multiple types (as shown below)</span></span>
<span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Fruit</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">APPLE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ORANGE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">PEACH</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Food</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">MILKSHAKE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BURGER</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">EGGS</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">APPLE</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="declaring-variables-and-assigning-values-with-your-new-type" tabindex="-1">Declaring variables and assigning values with your new type! <a class="header-anchor" href="#declaring-variables-and-assigning-values-with-your-new-type" aria-hidden="true">#</a></h2><p>Suppose we have a new type defined as:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Sport</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BASKETBALL</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">FOOTBALL</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">HOCKEY</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BASEBALL</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SOCCER</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VOLLEYBALL</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">TABLE_TENNIS</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Then we can define variables using this type like this:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Sport mostPopularSport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">Sport mySport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Then we can set the values of the variables like this:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">mostPopularSport </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> FOOTBALL</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">mySport </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TABLE_TENNIS</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="operations-on-enumeration-types" tabindex="-1">Operations on Enumeration Types <a class="header-anchor" href="#operations-on-enumeration-types" aria-hidden="true">#</a></h2><p>Enumeration types are stored internally as integers, which means they can be compared with each other. However, some numeric operations cannot be performed directly.</p><ul><li><p>No arithmetic operations are allowed on enumeration types (they are implicitly cast to integers):</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Sport fav</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">fav </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mostPopularSport </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // error: invalid conversion from &#39;int&#39; to &#39;Sport&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">fav </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> BASKETBALL </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> HOCKEY</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // error: invalid conversion from &#39;int&#39; to &#39;Sport&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">fav</span><span style="color:#89DDFF;">++;</span><span style="color:#676E95;font-style:italic;"> // error: no &#39;operator++(int)&#39; declared for postfix &#39;++&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>Solution: Explicitly cast the integer back to the <code>enum</code> type after the operator</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">fav </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#A6ACCD;">Sport</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">mySport </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>Relational Operators</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">FOOTBALL </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> SOCCER</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // true</span></span>
<span class="line"><span style="color:#A6ACCD;">HOCKEY </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> BASKETBALL</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // true</span></span>
<span class="line"><span style="color:#A6ACCD;">FOOTBALL </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> SOCCER</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // false</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>Using an enumeration type as the counter in a counter-controlled loop:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight has-diff" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Sport mySport </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> BASKETBALL</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> mySport </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> SOCCER</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    mySport </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#A6ACCD;">Sport</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">mySport </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Do stuff with mySport. Each iteration it is a different sport.</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><p>Reduce the amount of typing you have to do by using loops with <code>enum</code> types!</p>`,20),D=s("div",{class:"youtube"},[s("div",null,[s("iframe",{width:"853",height:"480",src:"https://www.youtube-nocookie.com/embed/dRn1cBq6o6k?rel=0",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:"allowfullscreen"})])],-1),F=n(`<h2 id="input-and-output-of-enumeration-types" tabindex="-1">Input and Output of Enumeration Types <a class="header-anchor" href="#input-and-output-of-enumeration-types" aria-hidden="true">#</a></h2><p>Enumeration types are stored internally as integers and therefore, will output numbers (not words) when displayed. However, we can write a function to convert the enumerated value into a <code>string</code>.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sportToString</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Sport</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">sport</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">sport</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> BASKETBALL</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Basketball</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> FOOTBALL</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Football</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> HOCKEY</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hockey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> BASEBALL</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Baseball</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> SOCCER</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Soccer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> VOLLEYBALL</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Volleyball</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> TABLE_TENIS</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Table Tennis</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Notice that enumeration types can be passed as parameters to functions either by value or by reference.</p><p>Also, a function can return a value of the enumeration type.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Sport</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stringToSport</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">word</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">word </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Basketball</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> BASKETBALL</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">word </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Football</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> FOOTBALL</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">word </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hockey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> HOCKEY</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">word </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Baseball</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> BASEBALL</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">word </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Soccer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> SOCCER</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">word </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Vollyball</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> VOLLEYBALL</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#676E95;font-style:italic;"> // (word == &quot;Table Tennis&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> TABLE_TENNIS</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,6),u=[t,r,c,i,y,D,F];function d(C,A,m,b,h,f){return l(),e("div",null,u)}const v=a(o,[["render",d]]);export{g as __pageData,v as default};
