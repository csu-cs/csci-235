import{_ as n,o as a,c as l,a as s,b as e,e as p}from"./app.ef5efdf9.js";const t="/csci-235/assets/struct-list.034a3b58.svg",o="/csci-235/assets/struct-list-init.2a4021cf.svg",g=JSON.parse('{"title":"Structs and Array, Together","description":"","frontmatter":{},"headers":[{"level":2,"title":"Arrays in structs","slug":"arrays-in-structs","link":"#arrays-in-structs","children":[{"level":3,"title":"Assignment","slug":"assignment","link":"#assignment","children":[]}]},{"level":2,"title":"structs in Arrays","slug":"structs-in-arrays","link":"#structs-in-arrays","children":[]},{"level":2,"title":"structs within structs","slug":"structs-within-structs","link":"#structs-within-structs","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"relativePath":"notes/09-structs-and-arrays.md","lastUpdated":1672375659000}'),r={name:"notes/09-structs-and-arrays.md"},c=s("h1",{id:"structs-and-array-together",tabindex:"-1"},[e("Structs and Array, Together "),s("a",{class:"header-anchor",href:"#structs-and-array-together","aria-hidden":"true"},"#")],-1),i=s("p",null,[s("em",null,"Chapter 9")],-1),y=s("div",{class:"youtube"},[s("div",null,[s("iframe",{width:"853",height:"480",src:"https://www.youtube-nocookie.com/embed/S_olSydh6FU?rel=0&showinfo=0",frameborder:"0",allowfullscreen:"allowfullscreen"})])],-1),D=p(`<h2 id="arrays-in-structs" tabindex="-1">Arrays in <code>struct</code>s <a class="header-anchor" href="#arrays-in-structs" aria-hidden="true">#</a></h2><p>Suppose we want to store a list of numbers in an array. However, the list may or may not fill up the entire array. We can create a <code>struct</code> for our list where we store the current length (or size) of the list.</p><ul><li><p>Two items are associated with a list:</p><ul><li>Values (elements)</li><li>Length of the list</li></ul></li><li><p>Define a <code>struct</code> containing both items:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Max size of a list</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> LIST_SIZE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * A data type that holds an array and its length</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">List</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">values</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">LIST_SIZE</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> // array containing list elements</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> length</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // the number of values used in this list</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li></ul><figure><img src="`+t+`" alt="The members of intList after begin declared as a List." id="fig:dec"><figcaption>The members of <code>intList</code> after begin declared as a <code>List</code>.</figcaption></figure><h3 id="assignment" tabindex="-1">Assignment <a class="header-anchor" href="#assignment" aria-hidden="true">#</a></h3><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// variable declaration and initialization.</span></span>
<span class="line"><span style="color:#A6ACCD;">List intList </span><span style="color:#89DDFF;">{{},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">};</span><span style="color:#676E95;font-style:italic;"> // Set values all to 0 and length to 0.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Set first value to 21.</span></span>
<span class="line"><span style="color:#A6ACCD;">intList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">values</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">intList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">intList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">++;</span><span style="color:#676E95;font-style:italic;"> // update the length to 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Set second value to 117.</span></span>
<span class="line"><span style="color:#A6ACCD;">intList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">values</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">intList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">117</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">intList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">++;</span><span style="color:#676E95;font-style:italic;"> // update the length to 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><figure><img src="`+o+`" alt="The members of intList after initialization and assigning the first two values." id="fig:init"><figcaption>The members of <code>intList</code> after initialization and assigning the first two values.</figcaption></figure><h2 id="structs-in-arrays" tabindex="-1"><code>struct</code>s in Arrays <a class="header-anchor" href="#structs-in-arrays" aria-hidden="true">#</a></h2><p>A common practice is to have arrays of <code>struct</code>s. For example,</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Info about an employee of this company.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Employee</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    string firstName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    string lastName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;">    personID</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    string deptID</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> yearlySalary</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> yearToDatePaid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Employee employees</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> // variable declaration</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// output first names</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> index </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> index </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> employees</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">firstName </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="structs-within-structs" tabindex="-1"><code>struct</code>s within <code>struct</code>s <a class="header-anchor" href="#structs-within-structs" aria-hidden="true">#</a></h2><p><code>struct</code>s may also be members of other <code>struct</code>s. For example,</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * A person&#39;s name.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Name</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    string first</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    string middle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    string last</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * A US address.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Address</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    string streetAddress</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    string city</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    string state</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> zip</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Info record of a customer.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Customer</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    Name name</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    Address shippingAddress</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    Address billingAddress</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Customer newCustomer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">newCustomer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">newCustomer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">first </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">James</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">newCustomer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">last </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Kirk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">newCustomer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">shippingAddress</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">city </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">South Carolina</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//...</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-hidden="true">#</a></h2><ul><li><code>struct</code>s can be members of other <code>struct</code>s</li><li><code>struct</code>s can have array members.</li><li>Arrays can be of a <code>struct</code> type.</li></ul>`,15),u=[c,i,y,D];function F(b,d,m,C,A,h){return a(),l("div",null,u)}const E=n(r,[["render",F]]);export{g as __pageData,E as default};
