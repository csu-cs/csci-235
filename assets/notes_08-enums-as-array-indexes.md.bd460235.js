import{_ as n,o as l,c as e,a as s,b as a,e as p}from"./app.ef5efdf9.js";const f=JSON.parse('{"title":"Enums as Array Indexes","description":"","frontmatter":{},"headers":[{"level":2,"title":"Integral Data Type and Array Indices","slug":"integral-data-type-and-array-indices","link":"#integral-data-type-and-array-indices","children":[]},{"level":2,"title":"Declare Arrays Using Type Aliases","slug":"declare-arrays-using-type-aliases","link":"#declare-arrays-using-type-aliases","children":[]}],"relativePath":"notes/08-enums-as-array-indexes.md","lastUpdated":1672369588000}'),o={name:"notes/08-enums-as-array-indexes.md"},r=s("h1",{id:"enums-as-array-indexes",tabindex:"-1"},[a("Enums as Array Indexes "),s("a",{class:"header-anchor",href:"#enums-as-array-indexes","aria-hidden":"true"},"#")],-1),t=s("p",null,[s("em",null,"Chapter 8")],-1),c=s("h2",{id:"integral-data-type-and-array-indices",tabindex:"-1"},[a("Integral Data Type and Array Indices "),s("a",{class:"header-anchor",href:"#integral-data-type-and-array-indices","aria-hidden":"true"},"#")],-1),i=s("p",null,"C++ allows any integral type to be used as an array index. Therefore, we can use defined enumeration types to improve readability.",-1),y=s("div",{class:"youtube"},[s("div",null,[s("iframe",{width:"853",height:"480",src:"https://www.youtube-nocookie.com/embed/eprz0UKq7mc?rel=0&showinfo=0",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"allowfullscreen"})])],-1),D=p(`<p>Example:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Color</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">GREEN</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">RED</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BLUE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BROWN</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">WHITE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ORANGE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">YELLOW</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">NO_COLOR</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> paintPrice</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">NO_COLOR</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> // Array of 7 doubles (NO_COLOR == 7)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// initialize the prices to $1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Color paint </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> GREEN</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> paint </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> NO_COLOR</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    paint </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#A6ACCD;">Color</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">paint </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">paintPrice</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">paint</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">paintPrice</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">RED</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> paintPrice</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">RED</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">75.96</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="declare-arrays-using-type-aliases" tabindex="-1">Declare Arrays Using Type Aliases <a class="header-anchor" href="#declare-arrays-using-type-aliases" aria-hidden="true">#</a></h2><p>You may use type aliasing to have a new name for an array of a particular type and size.</p><p>Example:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Use a constant for the size and declare an alias “typedef”</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> SIZE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">list</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">double</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">SIZE</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">list yourList</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // an array of 50 doubles called yourList</span></span>
<span class="line"><span style="color:#A6ACCD;">list myList</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // another array of 50 doubles called myList</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,6),d=[r,t,c,i,y,D];function C(F,A,u,m,b,h){return l(),e("div",null,d)}const E=n(o,[["render",C]]);export{f as __pageData,E as default};
